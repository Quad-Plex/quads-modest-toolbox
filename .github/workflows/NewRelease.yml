name: Create Release and Zip Archive

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Turn off all Hotkeys in the config
        run: |
          sed -i 's/true/false/g' quads_toolbox_scripts/toolbox_data/SAVEDATA/HOTKEY_CONFIG.json

      - name: Create Zip Archive of all script files
        run: |
          zip -r quads-modest-toolbox-${{ github.event.inputs.version }}.zip . -x ".git/*" ".github/*"

      - name: Get Previous Tag
        id: get_previous_tag
        run: echo "last_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Get Commit Messages
        id: get_commit_messages
        run: |
          commits=$(git log ${{ env.last_tag }}..HEAD --pretty=format:"* %s")
          cleaned_commits=$(echo "$commits" | sed -E 's/[^a-zA-Z0-9 ,.-]/-/g')
          echo "commit_messages=$cleaned_commits" >> $GITHUB_ENV
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          body: |
            Changes in this release:
            ${{ env.commit_messages }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          
      - name: Upload Zip Archive to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: quads-modest-toolbox-${{ github.event.inputs.version }}.zip
          asset_name: quads-modest-toolbox-${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
        env:  
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          
      - name: Print Release URL
        run: echo ${{ steps.create_release.outputs.html_url }}
